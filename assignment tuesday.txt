
CREATE TABLE Worker (
    WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME CHAR(25),
    LAST_NAME CHAR(25),
    SALARY INT(15),
    JOINING_DATE DATETIME,
    DEPARTMENT CHAR(25)
);

INSERT INTO Worker
    (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
        (001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
        (002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
        (003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
        (004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
        (005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
        (006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
        (007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
        (008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');

CREATE TABLE Bonus (
    WORKER_REF_ID INT,
    BONUS_AMOUNT INT(10),
    BONUS_DATE DATETIME,
    FOREIGN KEY (WORKER_REF_ID)
        REFERENCES Worker(WORKER_I
        ON DELETE CASCADE
);

INSERT INTO Bonus
    (WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
        (001, 5000, '16-02-20'),
        (002, 3000, '16-06-11'),
        (003, 4000, '16-02-20'),
        (001, 4500, '16-02-20'),
        (002, 3500, '16-06-11');
   
CREATE TABLE Title (
    WORKER_REF_ID INT,
    WORKER_TITLE CHAR(25),
    AFFECTED_FROM DATETIME,
    FOREIGN KEY (WORKER_REF_ID)
        REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title
(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2016-02-20 00:00:00'),
 (002, 'Executive', '2016-06-11 00:00:00'),
 (008, 'Executive', '2016-06-11 00:00:00'),
 (005, 'Manager', '2016-06-11 00:00:00'),
 (004, 'Asst. Manager', '2016-06-11 00:00:00'),
 (007, 'Executive', '2016-06-11 00:00:00'),
 (006, 'Lead', '2016-06-11 00:00:00'),
 (003, 'Lead', '2016-06-11 00:00:00');


1)Write a query to display all the first_name  in upper case

   select upper(first_name) as first_name_in_uppercase from worker;

2)Write a querty to display unique department from workers table

   select distinct department from worker;

3)Write an SQL query to print the first three characters of FIRST_NAME from Worker table

  SELECT SUBSTRING(FIRST_NAME, 1, 3) AS FIRST_NAME_PART FROM Worker;

4)Write an SQL query to find the position of the alphabet (‘a’) in the first name column ‘Amitabh’ from Worker table.

  SELECT POSITION('a' IN FIRST_NAME) AS position_of_a FROM Worker WHERE FIRST_NAME = 'Amitabh';
  
5)Write an SQL query that fetches the unique values of DEPARTMENT from Worker table and prints its length
 
  SELECT DISTINCT DEPARTMENT, LENGTH(DEPARTMENT) AS department_length FROM Worker;

6)Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending

  SELECT * FROM Worker
  ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

7)Write a query to get workers whose name are Vipul and Satish

  SELECT * FROM Worker
  WHERE FIRST_NAME IN ('Vipul', 'Satish');

8)Write an SQL query to print details of the Workers whose FIRST_NAME contains 'a'

	SELECT * FROM Workers
	WHERE FIRST_NAME LIKE '%a%';

9)Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets

	SELECT * 
	FROM Workers
	WHERE FIRST_NAME LIKE '_____h' AND LENGTH(FIRST_NAME) = 6;

10)Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000

	SELECT * 
	FROM Workers
	WHERE SALARY BETWEEN 100000 AND 500000;

11)Write an SQL query to print details of the Workers who have joined in Feb’2014
	SELECT * 
	FROM Workers
	WHERE JOIN_DATE BETWEEN '2014-02-01' AND '2014-02-28';

12)Write an SQL query to fetch the count of employees working in the department ‘Admin’
	SELECT COUNT(*) AS Admin_Employee_Count
	FROM Workers
	WHERE DEPARTMENT = 'Admin';

13)Write an SQL query to fetch the no. of workers for each department in the descending order
	SELECT DEPARTMENT, COUNT(*) AS Worker_Count
	FROM Workers
	GROUP BY DEPARTMENT
	ORDER BY Worker_Count DESC;

14)Write a query to display workerrs who are managers
	SELECT * 
	FROM Workers
	WHERE IS_MANAGER = 1;

15)Write query to find duplicate rows title table
	SELECT FIRST_NAME, LAST_NAME, COUNT(*) 
	FROM Workers
	GROUP BY FIRST_NAME, LAST_NAME
	HAVING COUNT(*) > 1;

14)Write an SQL query to show all workers who got the bonus
along with bonus amount
	SELECT w.FIRST_NAME, w.LAST_NAME, b.BONUS_AMOUNT
	FROM Workers w
	JOIN Bonus b ON w.EMPLOYEE_ID = b.EMPLOYEE_ID;

15)Write a query to find employees in worker table that do not exist in bonus table (ie did not get bonus)
	SELECT w.FIRST_NAME, w.LAST_NAME
	FROM Workers w
	LEFT JOIN Bonus b ON w.EMPLOYEE_ID = b.EMPLOYEE_ID
	WHERE b.BONUS_AMOUNT IS NULL;

16)Write a query to find the highest 2 salaries
	SELECT DISTINCT SALARY
	FROM Workers
	ORDER BY SALARY DESC
	LIMIT 2;

17)Find 2nd highest without using LIMIT
	SELECT MAX(SALARY) AS SECOND_HIGHEST_SALARY
	FROM Workers
	WHERE SALARY < (SELECT MAX(SALARY) FROM Workers);

18)Find people who have the same salary
	SELECT FIRST_NAME, LAST_NAME, SALARY
	FROM Workers
	WHERE SALARY IN (SELECT SALARY FROM Workers GROUP BY SALARY HAVING COUNT(*) > 1);
   
19)Write a query to fetch 1st 50% records without using limit 
	SELECT * 
	FROM Workers
	WHERE ROWID IN (
		SELECT ROWID
		FROM Workers
		ORDER BY ROWID
		FETCH FIRST 50 PERCENT ROWS ONLY
	);

20)Write a query to select a department with more than 3 people in worker table
	SELECT DEPARTMENT
	FROM Workers
	GROUP BY DEPARTMENT
	HAVING COUNT(*) > 3;

21)Write a query to select 1st and last row of a worker table
	SELECT * 
	FROM Workers
	ORDER BY EMPLOYEE_ID ASC
	FETCH FIRST 1 ROW ONLY;  -- For first row

	SELECT * 
	FROM Workers
	ORDER BY EMPLOYEE_ID DESC
	FETCH FIRST 1 ROW ONLY;  -- For last row

22)Write a query to select last 5 entries from worker table
	SELECT * 
	FROM Workers
	ORDER BY EMPLOYEE_ID DESC
	FETCH FIRST 5 ROWS ONLY;

23)Write a query to select people with highest salary in each group
	SELECT FIRST_NAME, LAST_NAME, DEPARTMENT, SALARY
	FROM Workers w
	WHERE SALARY = (SELECT MAX(SALARY) FROM Workers WHERE DEPARTMENT = w.DEPARTMENT);

24)Write a query to fetch departments along with the total salaries paid for each of them
	SELECT DEPARTMENT, SUM(SALARY) AS TOTAL_SALARY
	FROM Workers
	GROUP BY DEPARTMENT;

25)Write a query to fetch the names of workers who earn the highest salary
	SELECT FIRST_NAME, LAST_NAME
	FROM Workers
	WHERE SALARY = (SELECT MAX(SALARY) FROM Workers);
